# Generated by Django 5.0.4 on 2024-06-24 17:38

from django.db import migrations


def set_price(apps, schema_editor):
    MULTIPLIER = 120

    smartphone_model = apps.get_model("main_app", "SmartPhone")
    smartphone_price = smartphone_model.objects.all()

    for smartphone in smartphone_price:  # smartphone = ("apple", 0, "No category")
        smartphone.price = MULTIPLIER * len(smartphone.brand)  # apple => 5 * 120 => 600

    smartphone_model.objects.bulk_update(smartphone_price, ['price'])


def set_category(apps, schema_editor):
    smartphone_model = apps.get_model("main_app", "SmartPhone")
    smartphone_category = smartphone_model.objects.all()

    for smartphone in smartphone_category:
        if smartphone.price >= 750:
            smartphone.category = "Expensive"
        else:
            smartphone.category = "Cheap"

    smartphone_model.objects.bulk_update(smartphone_category, ['category'])


def reverse_fulling_of_columns_category_and_price(apps, schema_editor):
    smartphone_model = apps.get_model("main_app", "SmartPhone")
    smartphones = smartphone_model.objects.all()

    for smartphone in smartphones:
        smartphone.category = smartphone_model._meta.get_field('category').default
        smartphone.price = smartphone_model._meta.get_field('price').default

    smartphone_model.objects.bulk_update(smartphones, ['category', 'price'])


def set_all_columns(apps, schema_editor):
    set_price(apps, schema_editor)
    set_category(apps, schema_editor)


class Migration(migrations.Migration):

    dependencies = [
        ('main_app', '0013_smartphone'),
    ]

    operations = [
        migrations.RunPython(set_all_columns, reverse_fulling_of_columns_category_and_price)
    ]
